<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAbrirCaja.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnCerrarCaja.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        57w0RKqX5ccAAAAASUVORK5CYII=
</value>
  </data>
</root>